---
title: "Weekly Market Update"
author: "Sarath Nallamudi"
format: hugo
editor: visual
date: '`r format(Sys.time(), "%Y-%m-%d")`'
freeze: true
categories: ["Markets"]
tags: ["SPY", "DOW", "NASDAQ","SPX", "VIX"]
---

## Equity markets

```{r}
#| echo: false
#| warning: false
#| message: false
#| error: false

library(tidyverse)
library(lubridate)
library(Technical)
library(IBrokers)

library(TTR)
library(quantmod)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(gt)
library(gganimate)
library(DT)
library(bslib)
library(flextable)

options(scipen = 99999)
Fred_Func()

```

After the poor performance in 2022, stock market had a good start to 2023. Technology and small cap companies outperformed the S&P last week and for the month of January.

```{r Get_Data}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true

#### SP500
SPX_Daily <- getSymbols.yahoo("^GSPC", from='2000-01-01', periodicity = 'daily', auto.assign=FALSE)
SPX_Daily <- data.frame(Date = index(SPX_Daily), coredata(SPX_Daily))
colnames(SPX_Daily) <- c("PDate", "Open","High","Low","Close","Volume","Adj")

SPX_Daily<- add_dates(SPX_Daily, "PDate")
SPX_Daily$Return <- TTR::ROC(SPX_Daily$Close)

SPX_Weekly <- SPX_Daily%>%
  group_by(Price_Week)%>%
  summarise(
    Weekly_return = round((last(Adj) - first(Adj)) / first(Adj),4)
    )

SPX_Yearly <- SPX_Daily%>%
  group_by(Price_Year)%>%
  summarise(
    Yearly_return = round((last(Adj) - first(Adj)) / first(Adj),4)
  )

SPX_Monthly <- SPX_Daily%>%
  group_by(Price_Month)%>%
  summarise(
    Monthly_return = round((last(Adj) - first(Adj)) / first(Adj),4),
    Month = unique(format(PDate, "%B"))
  )


#### Nasdaq
NDX_Daily <- getSymbols.yahoo("^IXIC", from='2000-01-01', periodicity = 'daily', auto.assign=FALSE)
NDX_Daily <- data.frame(Date = index(NDX_Daily), coredata(NDX_Daily))
colnames(NDX_Daily) <- c("PDate", "Open","High","Low","Close","Volume","Adj")

NDX_Daily<- add_dates(NDX_Daily, "PDate")
NDX_Daily$Return <- TTR::ROC(NDX_Daily$Close)

NDX_Weekly <- NDX_Daily%>%
  group_by(Price_Week)%>%
  summarise(
    Weekly_return = round((last(Adj) - first(Adj)) / first(Adj),4)
    )

NDX_Yearly <- NDX_Daily%>%
  group_by(Price_Year)%>%
  summarise(
    Yearly_return = round((last(Adj) - first(Adj)) / first(Adj),4)
  )

NDX_Monthly <- NDX_Daily%>%
  group_by(Price_Month)%>%
  summarise(
    Monthly_return = round((last(Adj) - first(Adj)) / first(Adj),4),
    Month = unique(format(PDate, "%B"))
  )

#### Dow Jones

DJI_Daily <- getSymbols.yahoo("^DJI", from='2000-01-01', periodicity = 'daily', auto.assign=FALSE)
DJI_Daily <- data.frame(Date = index(DJI_Daily), coredata(DJI_Daily))
colnames(DJI_Daily) <- c("PDate", "Open","High","Low","Close","Volume","Adj")

DJI_Daily<- add_dates(DJI_Daily, "PDate")
DJI_Daily$Return <- TTR::ROC(DJI_Daily$Close)

DJI_Weekly <- DJI_Daily%>%
  group_by(Price_Week)%>%
  summarise(
    Weekly_return = round((last(Adj) - first(Adj)) / first(Adj),4)
    )

DJI_Yearly <- DJI_Daily%>%
  group_by(Price_Year)%>%
  summarise(
    Yearly_return = round((last(Adj) - first(Adj)) / first(Adj),4)
  )

DJI_Monthly <- DJI_Daily%>%
  group_by(Price_Month)%>%
  summarise(
    Monthly_return = round((last(Adj) - first(Adj)) / first(Adj),4),
    Month = unique(format(PDate, "%B"))
  )

#### Russell

RUT_Daily <- getSymbols.yahoo("^RUT", from='2000-01-01', periodicity = 'daily', auto.assign=FALSE)
RUT_Daily <- data.frame(Date = index(RUT_Daily), coredata(RUT_Daily))
colnames(RUT_Daily) <- c("PDate", "Open","High","Low","Close","Volume","Adj")

RUT_Daily<- add_dates(RUT_Daily, "PDate")
RUT_Daily$Return <- TTR::ROC(RUT_Daily$Close)

RUT_Weekly <- RUT_Daily%>%
  group_by(Price_Week)%>%
  summarise(
    Weekly_return = round((last(Adj) - first(Adj)) / first(Adj),4)
    )

RUT_Yearly <- RUT_Daily%>%
  group_by(Price_Year)%>%
  summarise(
    Yearly_return = round((last(Adj) - first(Adj)) / first(Adj),4)
  )

RUT_Monthly <- RUT_Daily%>%
  group_by(Price_Month)%>%
  summarise(
    Monthly_return = round((last(Adj) - first(Adj)) / first(Adj),4),
    Month = unique(format(PDate, "%B"))
  )

#### VIX

VIX_Daily <- getSymbols.yahoo("^VIX", from='2000-01-01', periodicity = 'daily', auto.assign=FALSE)
VIX_Daily <- data.frame(Date = index(VIX_Daily), coredata(VIX_Daily))
colnames(VIX_Daily) <- c("PDate", "Open","High","Low","Close","Volume","Adj")

VIX_Daily<- add_dates(VIX_Daily, "PDate")
VIX_Daily$Return <- TTR::ROC(VIX_Daily$Close)

VIX_Weekly <- VIX_Daily%>%
  group_by(Price_Week)%>%
  summarise(
    Weekly_return = round((last(Adj) - first(Adj)) / first(Adj),4)
    )

VIX_Yearly <- VIX_Daily%>%
  group_by(Price_Year)%>%
  summarise(
    Yearly_return = round((last(Adj) - first(Adj)) / first(Adj),4)
  )

VIX_Monthly <- VIX_Daily%>%
  group_by(Price_Month)%>%
  summarise(
    Monthly_return = round((last(Adj) - first(Adj)) / first(Adj),4),
    Month = unique(format(PDate, "%B"))
  )

```

```{r Weekly Return}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true
#| results: asis
#| tbl-cap: "Stock market this week" 

Weekly <- data.frame(Index = "S&P 500", SPX_Weekly[nrow(SPX_Weekly),])
Weekly <- rbind(Weekly, c(Index="Nasdaq", NDX_Weekly[nrow(NDX_Weekly),]))
Weekly <- rbind(Weekly, c(Index="Dow Jones", DJI_Weekly[nrow(DJI_Weekly),]))
Weekly <- rbind(Weekly, c(Index="Russell", RUT_Weekly[nrow(RUT_Weekly),]))
Weekly <- rbind(Weekly, c(Index="VIX", VIX_Weekly[nrow(VIX_Weekly),]))

# Weekly%>%
#   gt()%>%
#   fmt_percent(columns = "Weekly_return")%>%
#   cols_label(Index="Index",Price_Week = "Week", Weekly_return = "Weekly Return")%>%
#   tab_header("Stock market this week")%>%
#   tab_source_note("Source: Yahoo")

# Weekly%>%
#   datatable(filter = "none",
#             style = "auto",
#             colnames = c("Index","Week", "Weekly Return"))%>%
#   formatPercentage(columns = "Weekly_return", digits = 2)
  
Weekly%>%
  mutate(
    Weekly_return = Weekly_return *100
  )%>%
  flextable::flextable()%>%
  set_header_labels(values = c("Price_Week" = "Week", "Weekly_return" = "Weekly Return"))%>%
  colformat_double(j=3, big.mark=",", suffix = "%", digits = 2,
  na_str = "N/A")%>%
  theme_zebra()

```

### S&P 500

S&P 500 has an impressive 6.6% gain in the first month of 2023. It is the biggest percent gain for S&P since 2019 in January

```{r SPX_Monthly}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true
#| 
SPX_Monthly$Month <- factor(SPX_Monthly$Month, levels = unique(SPX_Monthly$Month))
SPX_Monthly$Year <- str_sub(SPX_Monthly$Price_Month, 3, 6)
#Monthly$Month <- str_sub(Monthly$Price_Month, 1, 2)

ggplot(SPX_Monthly%>%filter(Year >= year(Sys.Date())-5), aes(x=Year, y=Month, fill = Monthly_return))+
  geom_tile(color="black")+
  geom_text(aes(label= round(Monthly_return*100,1)))+
 # scale_fill_gradient(low="red", high="green")+
  scale_fill_gradientn(colours = hcl.colors(20, "RdYlGn"))+
  scale_y_discrete(limits=rev)+
  labs(title="Monthly return for S&P")+
  theme(legend.position = "none",
        title = element_text(colour = "darkred"))
  
  

```

### NASDAQ

Technology stocks outperformed S&P significantly to start the year with a solid gain of 11.5%. Only April 2020 had higher gain than January 2023 since the last 5 years.

```{r NDX_Monthly}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true
#| 
NDX_Monthly$Month <- factor(NDX_Monthly$Month, levels = unique(NDX_Monthly$Month))
NDX_Monthly$Year <- str_sub(NDX_Monthly$Price_Month, 3, 6)
#Monthly$Month <- str_sub(Monthly$Price_Month, 1, 2)

ggplot(NDX_Monthly%>%filter(Year >= year(Sys.Date())-5), aes(x=Year, y=Month, fill = Monthly_return))+
  geom_tile(color="black")+
  geom_text(aes(label= round(Monthly_return*100,1)))+
 # scale_fill_gradient(low="red", high="green")+
  scale_fill_gradientn(colours = hcl.colors(20, "RdYlGn"))+
  scale_y_discrete(limits=rev)+
  labs(title="Monthly return for Nasdaq")+
  theme(legend.position = "none",
        title = element_text(colour = "darkred"))
  
  

```

### DOW Jones

However, blue chip dow stocks underperformed significanlty in January

```{r DJI_Monthly}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true
#| 
DJI_Monthly$Month <- factor(DJI_Monthly$Month, levels = unique(DJI_Monthly$Month))
DJI_Monthly$Year <- str_sub(DJI_Monthly$Price_Month, 3, 6)
#Monthly$Month <- str_sub(Monthly$Price_Month, 1, 2)

ggplot(DJI_Monthly%>%filter(Year >= year(Sys.Date())-5), aes(x=Year, y=Month, fill = Monthly_return))+
  geom_tile(color="black")+
  geom_text(aes(label= round(Monthly_return*100,1)))+
 # scale_fill_gradient(low="red", high="green")+
  scale_fill_gradientn(colours = hcl.colors(20, "RdYlGn"))+
  scale_y_discrete(limits=rev)+
  labs(title="Monthly return for DOW")+
  theme(legend.position = "none",
        title = element_text(colour = "darkred"))
  
  

```

### Russell

Small cap stocks showed strength with 10.3% gain. The index recovered it's losses in December 2022 and gained \~4% over December losses

```{r RUT_Monthly}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true
#| 
RUT_Monthly$Month <- factor(RUT_Monthly$Month, levels = unique(RUT_Monthly$Month))
RUT_Monthly$Year <- str_sub(RUT_Monthly$Price_Month, 3, 6)
#Monthly$Month <- str_sub(Monthly$Price_Month, 1, 2)

ggplot(RUT_Monthly%>%filter(Year >= year(Sys.Date())-5), aes(x=Year, y=Month, fill = Monthly_return))+
  geom_tile(color="black")+
  geom_text(aes(label= round(Monthly_return*100,1)))+
 # scale_fill_gradient(low="red", high="green")+
  scale_fill_gradientn(colours = hcl.colors(20, "RdYlGn"))+
  scale_y_discrete(limits=rev)+
  labs(title="Monthly return for Russell")+
  theme(legend.position = "none",
        title = element_text(colour = "darkred"))
  
  

```

## Bond markets

```{r Get Fred Data}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: false


Treasury_Symbols <- c("DGS3MO", "DGS6MO","DFF","DGS1", "DGS2", "DGS5","DGS7","DGS10", "DGS30")
getSymbols.FRED(Symbols = Treasury_Symbols, env = globalenv(), versbose= FALSE)

```

```{r Treasuries}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true

while (!(exists("DGS3MO", envir = parent.frame()) && exists("DGS6MO", envir = parent.frame()) && exists("DGS1", envir = parent.frame()) && exists("DGS2", envir = parent.frame()) && exists("DGS5", envir = parent.frame()) && exists("DGS7", envir = parent.frame()) && exists("DGS10", envir = parent.frame()) && exists("DGS30", envir = parent.frame()) )) {
  Sys.sleep(1)
}


Treasuries <- merge.xts(DGS3MO, DGS6MO, DGS1, DGS2, DGS5, DGS7, DGS10, DGS30)
Treasuries <- data.frame(Date = index(Treasuries), coredata(Treasuries))
colnames(Treasuries) <- c("Date","3Mos","6Mos","1Year","2Years","5Years","7Years","10Years","30Years")
rates <- c("3Mos","6Mos","1Year","2Years","5Years","7Years","10Years","30Years")
```

### Interest rates

Longer term interest rates for treasuries are trending down while shorter term rates are staying flat to slightly down for the year.

```{r Interest_Rates}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true

Treasuries%>%
  filter(year(Date)>= 2022)%>%
  pivot_longer(cols=rates)%>%
  filter(!is.na(value))%>%
ggplot(aes(x= Date))+
 geom_line(aes(y=value, group=name, color=factor(name, levels=rates)))+
  labs(x= "Date",
       y="Percentage")+
  theme_custom()+
  theme(legend.title = element_blank())


```

### Yeild Curve

Yield curve continues to slope negatively (inverted). At the higher end, it appears that it is starting to slope positively or flat but at the lower end, it still slopes significantly negative

```{r Yield_Curve}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true

Treasuries[nrow(Treasuries),]%>%
  pivot_longer(cols=rates)%>%
ggplot(aes(x=factor(name, levels=rates)))+
 geom_line(aes(y=value, group=1))+
  labs(x= "Time frame",
       y="Percentage")+
theme_custom()


```

```{r Yield_Curve_inv}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true

Treasuries%>%
  filter(year(Date)>= 2022)%>%
  mutate(
    `2s3mos` = `2Years` - `3Mos`,
    `10s2s` = `10Years` - `2Years` 
  )%>%
  select(Date, `2s3mos`, `10s2s`)%>%
  pivot_longer(cols=c(`2s3mos`, `10s2s`))%>%
  filter(!is.na(value))%>%
ggplot(aes(x= Date))+
 geom_line(aes(y=value, group=name, color=factor(name, levels=c("2s3mos", "10s2s"))))+
  labs(x= "Date",
       y="Percentage",
       title = "Yield curves")+
  theme_custom()+
  theme(legend.title = element_blank())


```
