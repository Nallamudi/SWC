---
title: "Weekly Market Update"
author: "Sarath Nallamudi"
format: hugo
editor: source
date: '2023-05-07'
freeze: true
categories: ["Markets"]
tags: ["SPY", "DOW", "NASDAQ","SPX", "VIX"]
execute: 
  echo: false
  warning: false
  message: false
  error: false
---


## Equity markets


```{r}
#| echo: false
#| warning: false
#| message: false
#| error: false

library(tidyverse)
library(lubridate)
library(Technical)
library(IBrokers)
library(RPostgres)
library(glue)
library(here)
library(fredr)

library(TTR)
library(quantmod)
library(PerformanceAnalytics)
library(PortfolioAnalytics)
library(gt)
library(gganimate)
library(DT)
library(bslib)
library(flextable)

options(scipen = 99999)
get_quantmod_fred_data()

```

```{r Get_Data}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true

#### SP500
SPX_Daily <- getSymbols.yahoo("^GSPC", from='2000-01-01', periodicity = 'daily', auto.assign=FALSE)
SPX_Daily <- data.frame(Date = index(SPX_Daily), coredata(SPX_Daily))
colnames(SPX_Daily) <- c("PDate", "Open","High","Low","Close","Volume","Adj")

SPX_Daily<- add_dates(SPX_Daily, "PDate")
SPX_Daily$Return <- TTR::ROC(SPX_Daily$Close)

#SPX_Daily <- Daily_Metrics(SPX_Daily, "PDate")


#### Period aggregate functions
to_weekly <- function(SPX_Daily, Price_Week = Price_Week){
  
  SPX_Weekly <- SPX_Daily%>%
  group_by(price_week)%>%
  summarise(
    Open = first(Open),
    High = max(High),
    Low = min(Low),
    Close = last(Adj)
    )%>%
  mutate(
    Weekly_return = ROC(Close)
  )
  
  return(SPX_Weekly)
}

to_monthly <- function(SPX_Daily, Price_Month = Price_Month){

  SPX_Monthly <- SPX_Daily%>%
  group_by(price_month)%>%
  summarise(
    Open = first(Open),
    High = max(High),
    Low = min(Low),
    Close = last(Adj),
    Month = unique(format(PDate, "%B"))
    )%>%
  mutate(
    Monthly_return = ROC(Close)
  )
  return(SPX_Monthly)
}  
  
  
to_yearly <- function(SPX_Daily, price_Year = price_Year){  
  
SPX_Yearly <- SPX_Daily%>%
  group_by(price_year)%>%
  summarise(
    Open = first(Open),
    High = max(High),
    Low = min(Low),
    Close = last(Adj)
    )%>%
  mutate(
    Yearly_return = ROC(Close)
  )
}



#### SPX Metrics

SPX_Weekly <- to_weekly(SPX_Daily)
SPX_Monthly <- to_monthly(SPX_Daily)
SPX_Yearly <- to_yearly(SPX_Daily)


#### Nasdaq
NDX_Daily <- getSymbols.yahoo("^IXIC", from='2000-01-01', periodicity = 'daily', auto.assign=FALSE)
NDX_Daily <- data.frame(Date = index(NDX_Daily), coredata(NDX_Daily))
colnames(NDX_Daily) <- c("PDate", "Open","High","Low","Close","Volume","Adj")

NDX_Daily<- add_dates(NDX_Daily, "PDate")
NDX_Daily$Return <- TTR::ROC(NDX_Daily$Close)

NDX_Weekly <- to_weekly(NDX_Daily)
NDX_Monthly <- to_monthly(NDX_Daily)
NDX_Yearly <- to_yearly(NDX_Daily)

#### Dow Jones

DJI_Daily <- getSymbols.yahoo("^DJI", from='2000-01-01', periodicity = 'daily', auto.assign=FALSE)
DJI_Daily <- data.frame(Date = index(DJI_Daily), coredata(DJI_Daily))
colnames(DJI_Daily) <- c("PDate", "Open","High","Low","Close","Volume","Adj")

DJI_Daily<- add_dates(DJI_Daily, "PDate")
DJI_Daily$Return <- TTR::ROC(DJI_Daily$Close)

DJI_Weekly <- to_weekly(DJI_Daily)
DJI_Monthly <- to_monthly(DJI_Daily)
DJI_Yearly <- to_yearly(DJI_Daily)

#### Russell

RUT_Daily <- getSymbols.yahoo("^RUT", from='2000-01-01', periodicity = 'daily', auto.assign=FALSE)
RUT_Daily <- data.frame(Date = index(RUT_Daily), coredata(RUT_Daily))
colnames(RUT_Daily) <- c("PDate", "Open","High","Low","Close","Volume","Adj")

RUT_Daily<- add_dates(RUT_Daily, "PDate")
RUT_Daily$Return <- TTR::ROC(RUT_Daily$Close)

RUT_Weekly <- to_weekly(RUT_Daily)
RUT_Monthly <- to_monthly(RUT_Daily)
RUT_Yearly <- to_yearly(RUT_Daily)

#### VIX

VIX_Daily <- getSymbols.yahoo("^VIX", from='2000-01-01', periodicity = 'daily', auto.assign=FALSE)
VIX_Daily <- data.frame(Date = index(VIX_Daily), coredata(VIX_Daily))
colnames(VIX_Daily) <- c("PDate", "Open","High","Low","Close","Volume","Adj")

VIX_Daily<- add_dates(VIX_Daily, "PDate")
VIX_Daily$Return <- TTR::ROC(VIX_Daily$Close)

VIX_Weekly <- to_weekly(VIX_Daily)
VIX_Monthly <- to_monthly(VIX_Daily)
VIX_Yearly <- to_yearly(VIX_Daily)


```


FOMC meeting brought back some volatility in to the stock markets as expected. S&P lost about 120 points for the week at one point but earnings results helped the index bounce back somewhat. Bluechips led the markets down with a 1.25% loss for the week.  


```{r }
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true
#| tbl-cap: "Stock market this week" 

Weekly <- data.frame(Index = "S&P 500", SPX_Weekly[nrow(SPX_Weekly)-1,"Close"], SPX_Weekly[nrow(SPX_Weekly),])
Weekly <- rbind(Weekly, c(Index="Nasdaq", NDX_Weekly[nrow(NDX_Weekly)-1,"Close"], NDX_Weekly[nrow(NDX_Weekly),]))
Weekly <- rbind(Weekly, c(Index="Dow Jones", DJI_Weekly[nrow(DJI_Weekly)-1,"Close"], DJI_Weekly[nrow(DJI_Weekly),]))
Weekly <- rbind(Weekly, c(Index="Russell", RUT_Weekly[nrow(RUT_Weekly)-1,"Close"], RUT_Weekly[nrow(RUT_Weekly),]))
Weekly <- rbind(Weekly, c(Index="VIX", VIX_Weekly[nrow(VIX_Weekly)-1,"Close"], VIX_Weekly[nrow(VIX_Weekly),]))

# Weekly%>%
#   gt()%>%
#   fmt_percent(columns = "Weekly_return")%>%
#   fmt_number(columns = c("Open","High","Low","Close"), decimals = 0)%>%
#   cols_label(Index="Index",Price_Week = "Week", Weekly_return = "Weekly Return")%>%
#   tab_header("Stock market this week")%>%
#   tab_source_note("Source: Yahoo")
# 
# Weekly%>%
#   datatable(filter = "none",
#             style = "auto",
#             rownames = FALSE,
#             colnames = c("Index","Week", "Open","High","Low","Close", "Weekly Return"))%>%
#   formatPercentage(columns = "Weekly_return", digits = 2)%>%
#   formatRound(columns = c("Open","High","Low","Close"), digits=0)%>%
#   formatStyle(
#     columns = "Weekly_return",
#     color = styleInterval(
#       cuts = 0, 
#       values = c("red", "green")
#     )
#   )

Weekly%>%
  mutate(
    Weekly_return = Weekly_return *100
  ) %>%
  flextable::flextable ()%>%
  set_header_labels(values = c("price_week" = "Week", 
                               "Weekly_return" = "Weekly Return", 
                               "Close" = "Pre. Close", 
                               "Close.1"="Close"))%>%
  colformat_double(j=8, 
                   big.mark=",", 
                   suffix = "%", 
                   digits = 2,
                   na_str = "N/A")%>%
  colformat_double(j=c(2,4,5,6,7), 
                   big.mark=",", 
                   digits = 0,
                   na_str = "N/A")%>%
  colformat_double(i=5, j=c(2,4,5,6,7), 
                   big.mark=",", 
                   digits = 1,
                   na_str = "N/A")%>%
  theme_zebra() 
# %>%
#   line_spacing(space = 0.8, part = "all") %>%
#   set_table_properties(layout = "autofit") %>%
#   padding(padding = 0.5, part = "all")

```


### S&P 500

S&P lost 0.8% in the first week of May. The index is pretty much range bound since the end of March with no direction in either side.  


```{r SPX_Monthly}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true
#| 
SPX_Monthly$Month <- factor(SPX_Monthly$Month, levels = unique(SPX_Monthly$Month))
SPX_Monthly$Year <- str_sub(SPX_Monthly$price_month, 1, 4)
#Monthly$Month <- str_sub(Monthly$Price_Month, 1, 2)

ggplot(SPX_Monthly%>%filter(Year >= year(Sys.Date())-5), aes(x=Year, y=Month, fill = Monthly_return))+
  geom_tile(color="black")+
  geom_text(aes(label= round(Monthly_return*100,1)))+
 # scale_fill_gradient(low="red", high="green")+
  scale_fill_gradientn(colours = hcl.colors(20, "RdYlGn"))+
  scale_y_discrete(limits=rev)+
  labs(title="Monthly return for S&P")+
    theme_custom()+
  theme(title = element_text(colour = "darkred"))+
  guides(fill=guide_legend(title="Return"))+
  scale_fill_gradient(low = "red", high = "green", labels = scales::label_percent())
```


#### S&P 500 sector performance

Energy sector lost big for the week with a loss of 5.76%. Communication services and financials lost 2.6% and 2.5% respectively. Technology, utility and health care sectors pretty much stayed flat for the week. 


```{r }
#| echo: false
#| warning: false
#| error: false
#| tbl-cap: SP500 Sector performance
#| message: false

swc_db <- connect_to_swc_db()
week <- get_week(Sys.Date()-2)
sp500_sectors_sql <- get_sql(paste0(here(), "/R/Weekly_Yahoo/SNP500_Sectors.sql"))
sp500_sectors_sql <- glue(sp500_sectors_sql)

sp500_sectors_query <- dbSendQuery(swc_db, sp500_sectors_sql)
sp500_sectors <- dbFetch(sp500_sectors_query)
dbClearResult(sp500_sectors_query)

sp_sectors_sql <- 'select * from setup."sp500_sectors"'
sp_sectors_query <- dbSendQuery(swc_db, sp_sectors_sql)
sp_sectors <- dbFetch(sp_sectors_query)
dbClearResult(sp_sectors_query)

sp500_sectors%>%
  left_join(sp_sectors, by=c("ticker" = "ticker")) %>%
  mutate(
    weekly_return = return *100
  ) %>%
  select(ticker, sector, price_week, open, high, low, close, weekly_return) %>%
  arrange(ticker) %>%
  flextable::flextable() %>%
  set_header_labels(values = c("ticker" = "Ticker", 
                               "sector" = "Sector", 
                               "price_week" = "Week", 
                               "weekly_return" = "Weekly Return", 
                               "close" = "Close", 
                               "high" = "High", 
                               "low" = "Low", 
                               "open" = "Open")) %>%
  colformat_double(j=c(7,8), 
                   big.mark=",", 
                   suffix = "%",
                   digits = 2,
                   na_str = "N/A")%>%
  colformat_double(j=c(3,4,5,6), 
                   big.mark=",", 
                   digits = 1,
                   na_str = "N/A")%>%
  theme_zebra() 
# %>%
#   line_spacing(space = 0, part = "all") %>%
#   set_table_properties(layout = "autofit") %>%
#   padding(padding = 0, part = "all")


```


### NASDAQ

NASDAQ showed some strength last week with a paltry 0.1% gain while the rest of the indices lost.   


```{r NDX_Monthly}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true
#| 
NDX_Monthly$Month <- factor(NDX_Monthly$Month, levels = unique(NDX_Monthly$Month))
NDX_Monthly$Year <- str_sub(NDX_Monthly$price_month, 1, 4)
#Monthly$Month <- str_sub(Monthly$Price_Month, 1, 2)

ggplot(NDX_Monthly%>%filter(Year >= year(Sys.Date())-5), aes(x=Year, y=Month, fill = Monthly_return))+
  geom_tile(color="black")+
  geom_text(aes(label= round(Monthly_return*100,1)))+
 # scale_fill_gradient(low="red", high="green")+
  scale_fill_gradientn(colours = hcl.colors(20, "RdYlGn"))+
  scale_y_discrete(limits=rev)+
  labs(title="Monthly return for Nasdaq")+
  theme(legend.position = "none",
        title = element_text(colour = "darkred"))+
  theme_custom()+
  theme(title = element_text(colour = "darkred"))+
  guides(fill=guide_legend(title="Return"))+
  scale_fill_gradient(low = "red", high = "green", labels = scales::label_percent())
    
  
  

```


### DOW Jones

Blue chips lost 1.3% for the week. Dow has been direction less for the most part of the year.  


```{r DJI_Monthly}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true
#| 
DJI_Monthly$Month <- factor(DJI_Monthly$Month, levels = unique(DJI_Monthly$Month))
DJI_Monthly$Year <- str_sub(DJI_Monthly$price_month, 1, 4)
#Monthly$Month <- str_sub(Monthly$Price_Month, 1, 2)

ggplot(DJI_Monthly%>%filter(Year >= year(Sys.Date())-5), aes(x=Year, y=Month, fill = Monthly_return))+
  geom_tile(color="black")+
  geom_text(aes(label= round(Monthly_return*100,1)))+
 # scale_fill_gradient(low="red", high="green")+
  scale_fill_gradientn(colours = hcl.colors(20, "RdYlGn"))+
  scale_y_discrete(limits=rev)+
  labs(title="Monthly return for DOW")+
  theme(legend.position = "none",
        title = element_text(colour = "darkred"))+
  theme_custom()+
  theme(title = element_text(colour = "darkred"))+
  guides(fill=guide_legend(title="Return"))+
  scale_fill_gradient(low = "red", high = "green", labels = scales::label_percent())
  
  

```


### Russell

Small caps continue to under perform losing 0.5% in the first week of may. If it is indeed the start of a new bull market, we should see small caps participating in the rally but so far, that is not the case.  


```{r RUT_Monthly}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true
#| 
RUT_Monthly$Month <- factor(RUT_Monthly$Month, levels = unique(RUT_Monthly$Month))
RUT_Monthly$Year <- str_sub(RUT_Monthly$price_month, 1, 4)
#Monthly$Month <- str_sub(Monthly$Price_Month, 1, 2)

ggplot(RUT_Monthly%>%filter(Year >= year(Sys.Date())-5), aes(x=Year, y=Month, fill = Monthly_return))+
  geom_tile(color="black")+
  geom_text(aes(label= round(Monthly_return*100,1)))+
 # scale_fill_gradient(low="red", high="green")+
  scale_fill_gradientn(colours = hcl.colors(20, "RdYlGn"))+
  scale_y_discrete(limits=rev)+
  labs(title="Monthly return for Russell")+
  theme(legend.position = "none",
        title = element_text(colour = "darkred"))+
  theme_custom()+
  theme(title = element_text(colour = "darkred"))+
  guides(fill=guide_legend(title="Return"))+
  scale_fill_gradient(low = "red", high = "green", limits=c(-0.2,0.2), labels = scales::label_percent())
  
  

```


## Bond markets


```{r Get Fred Data}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: false


Treasury_Symbols <- c("DGS3MO", "DGS6MO","DFF","DGS1", "DGS2", "DGS5","DGS7","DGS10", "DGS30")
# fredr_set_key()
# for (i in 1:length(Treasury_Symbols)) {
# Treasuries[i]<- fredr::fredr(Treasury_Symbols[i])
# }

getSymbols.FRED(Symbols = Treasury_Symbols, env = globalenv(), versbose= FALSE)

```

```{r Treasuries}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true

while (!(exists("DGS3MO", envir = parent.frame()) && exists("DGS6MO", envir = parent.frame()) && exists("DGS1", envir = parent.frame()) && exists("DGS2", envir = parent.frame()) && exists("DGS5", envir = parent.frame()) && exists("DGS7", envir = parent.frame()) && exists("DGS10", envir = parent.frame()) && exists("DGS30", envir = parent.frame()) )) {
  Sys.sleep(1)
}


Treasuries <- merge.xts(DGS3MO, DGS6MO, DGS1, DGS2, DGS5, DGS7, DGS10, DGS30)
Treasuries <- data.frame(Date = index(Treasuries), coredata(Treasuries))
colnames(Treasuries) <- c("Date","3Mos","6Mos","1Year","2Years","5Years","7Years","10Years","30Years")
rates <- c("3Mos","6Mos","1Year","2Years","5Years","7Years","10Years","30Years")
short_rates <- c("3Mos","6Mos","1Year","2Years")
long_rates <- c("2Years","5Years","7Years","10Years","30Years")

```


### Interest rates

Bonds and stocks continue to tell different stories, as if they are living in their own separate worlds. We have both Treasuries and Equities falling. Short term rates continue to stay higher while longer term rates saw declines. 


```{r Interest_Rates}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true

Treasuries%>%
  filter(year(Date)>= 2022)%>%
  pivot_longer(cols=short_rates)%>%
  filter(!is.na(value))%>%
ggplot(aes(x= Date))+
 geom_line(aes(y=value, group=name, color=factor(name, levels=short_rates)), size=1)+
  labs(title = "Short term treasury rates",
       x= "Date",
       y="Percentage")+
  theme_custom()+
  theme(title = element_text(colour = "darkred"))+
  theme(legend.title = element_blank())



Treasuries%>%
  filter(year(Date)>= 2022)%>%
  pivot_longer(cols=long_rates)%>%
  filter(!is.na(value))%>%
ggplot(aes(x= Date))+
 geom_line(aes(y=value, group=name, color=factor(name, levels=long_rates)), size=1)+
  labs(title = "Longer term treasury rates",
       x= "Date",
       y="Percentage")+
  theme_custom()+
  theme(legend.title = element_blank(),
        title = element_text(color="darkred"))


```


### Yield Curve

Yield curve above 5 years duration is starting to show positive slope. Although it is a good sign, the steep negative slope at the lower end continues to be an issue with no signs of turning around anytime soon. 


```{r Yield_Curve}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true

Treasuries[nrow(Treasuries),]%>%
  pivot_longer(cols=rates)%>%
ggplot(aes(x=factor(name, levels=rates)), size=1)+
 geom_line(aes(y=value, group=1))+
  labs(title = "Yield Curve",
       x= "Time frame",
       y="Percentage")+
theme_custom()+
  theme(title = element_text(colour = "darkred"))


```

```{r Yield_Curve_inv}
#| echo: false
#| warning: false
#| message: false
#| error: false
#| output: true

Treasuries%>%
  filter(year(Date)>= 2020)%>%
  mutate(
    `2s3mos` = `2Years` - `3Mos`,
    `10s2s` = `10Years` - `2Years`,
    `10s3mos` = `10Years` - `3Mos`,
    `30s2s` = `30Years` - `2Years`
  )%>%
  select(Date, `2s3mos`, `10s2s`, `10s3mos`, `30s2s`)%>%
  pivot_longer(cols=c(`2s3mos`, `10s2s`, `10s3mos`, `30s2s`))%>%
  filter(!is.na(value))%>%
ggplot(aes(x= Date))+
 geom_line(aes(y=value, group=name, color=factor(name, levels=c("2s3mos", "10s2s", "10s3mos", "30s2s"))), size=1)+
  labs(x= "Date",
       y="Percentage",
       title = "Yield curves")+
  theme_custom()+
  theme(title = element_text(colour = "darkred"))+
  theme(legend.title = element_blank(),
        legend.position = "bottom")
```


### Disclaimer

Anything on this blog is not an investment advice. It is essential that you fully understand the risks involved before making any investment decisions. You should consult with a financial professional to help you assess your risk tolerance and to determine an investment strategy that is suitable for your individual needs.

Please note that this disclaimer is not exhaustive and is provided for informational purposes only. Investing involves risks, and it is your responsibility to carefully consider the risks before making any investment decisions.

